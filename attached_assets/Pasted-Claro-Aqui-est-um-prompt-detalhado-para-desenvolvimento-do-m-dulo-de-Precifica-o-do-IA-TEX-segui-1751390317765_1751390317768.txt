Claro! Aqui está um prompt detalhado para desenvolvimento do módulo de Precificação do IA.TEX, seguindo as melhores práticas, requisitos de UX/UI modernos e o fluxo dinâmico/multietapas que você pediu:

---

**Prompt para desenvolvimento do módulo de Precificação do IA.TEX**

**Objetivo:**  
Criar um módulo de Precificação dinâmico, modular, intuitivo e visualmente moderno para o sistema IA.TEX, permitindo que o usuário realize o cálculo de preço de peças de confecção de forma guiada, flexível e com sugestões inteligentes.

---

### 1. Estrutura e Fluxo

- O módulo deve ser composto por múltiplas etapas (wizard), cada uma representando uma fase do processo de precificação.
- As etapas devem ser componentes independentes, reutilizáveis e facilmente reorganizáveis.
- O estado global do fluxo deve ser gerenciado por Context API (ou Zustand/Jotai, se preferir), permitindo persistência local (localStorage) e fácil acesso entre etapas.
- O usuário pode navegar entre etapas, com possibilidade de voltar e avançar, sem perder dados.

---

### 2. Etapas do Fluxo

1. **Tipo de Peça**
   - Seleção do tipo de peça (camiseta, calça, vestido, etc).
   - Sugestões automáticas e campo para adicionar novo tipo.
2. **Tecido**
   - Seleção do tecido principal.
   - Sugestões baseadas em histórico ou catálogo.
   - Campo para inserir novo tecido.
3. **Tamanhos**
   - Definição dos tamanhos a serem produzidos (P, M, G, GG, etc).
   - Quantidade por tamanho.
4. **Custos de Criação**
   - Itens dinâmicos como modelagem, piloto, etiqueta, consultoria, etc.
   - Sugestões automáticas e possibilidade de adicionar/remover itens.
   - Cada item tem: descrição, valor unitário, quantidade, desperdício (% opcional).
5. **Insumos**
   - Lista dinâmica de insumos (linhas, botões, aviamentos, etc).
   - Mesmo formato de entrada dos custos de criação.
6. **Mão de Obra**
   - Itens de mão de obra (costura, acabamento, revisão, etc).
   - Mesmo formato dinâmico.
7. **Custos Fixos**
   - Itens como energia, aluguel, manutenção, etc.
   - Mesmo formato dinâmico.
8. **Resumo e Precificação**
   - Exibir todos os dados preenchidos.
   - Cálculo automático do custo total, margem de lucro, preço sugerido.
   - Permitir ajuste manual da margem e ver atualização em tempo real.
   - Botão para salvar, exportar ou enviar para outro módulo.

---

### 3. Funcionalidades e UX

- **Sugestões inteligentes:**  
  Cada etapa com sugestões baseadas em histórico, catálogo ou IA (mock por enquanto).
- **Persistência local:**  
  Dados salvos automaticamente no localStorage a cada alteração.
- **Validação dinâmica:**  
  Inputs com validação em tempo real (ex: valores numéricos, campos obrigatórios).
- **Feedback visual:**  
  Destaque de campos obrigatórios, erros, e progresso do usuário.
- **Modal de confirmação:**  
  Para ações importantes (ex: resetar fluxo, salvar, sair sem salvar).
- **Design moderno:**  
  Utilizar Tailwind, shadcn/ui, e seguir o visual do dashboard enviado (sidebar, cards, botões arredondados, cores sóbrias, responsividade).

---

### 4. Componentização

- Cada etapa é um componente em `components/precificacao/`.
- O contexto global fica em `PrecificacaoContext.tsx`.
- O modal de resumo/finalização é um componente separado, usando React Portal.
- O resumo é um componente reutilizável, podendo ser usado em outras telas futuramente.

---

### 5. Integração

- O módulo deve ser facilmente integrável ao layout global do sistema.
- Deve respeitar o tema, header, sidebar e responsividade do dashboard.

---

### 6. Testes

- Testar cada etapa isoladamente antes de integrar ao fluxo completo.
- Garantir que o fluxo não trave, mesmo com dados incompletos ou inválidos.
- Testar persistência local e navegação entre etapas.

---

**Exemplo de estrutura de arquivos:**
```
src/
  components/
    precificacao/
      EtapaTipoPeca.tsx
      EtapaTecido.tsx
      EtapaTamanhos.tsx
      EtapaCustosDinamicos.tsx
      EtapaInsumos.tsx
      EtapaMaoObra.tsx
      EtapaCustosFixos.tsx
      ResumoPrecificacao.tsx
      ModalPrecificacao.tsx
      PrecificacaoContext.tsx
  app/
    precificacao/
      page.tsx
```

---

Se quiser, posso adaptar esse prompt para enviar para outro dev, para documentação, ou para detalhar ainda mais cada etapa!